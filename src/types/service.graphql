type Service {
  "Words or phrases to further describe the service."
  ancillaryKeywords: [String]
  "The unique concept id assigned to the service."
  conceptId: String!
  "This is the contact groups of the service."
  contactGroups: JSON
  "This is the contact persons of the service."
  contactPersons: JSON
  "A brief description of the service."
  description: String
  "The long name of the service, software, or tool."
  longName: String
  "The name of the service, software, or tool."
  name: String
  "This element contains important information about the universal resource locator (URL) for the service."
  relatedUrls: JSON
  "Allows for the specification of Earth Science Service keywords that are representative of the service."
  serviceKeywords: JSON
  "Service options, data transformations and output formats."
  serviceOptions: JSON
  "The service provider, or organization, or institution responsible for developing, archiving, and/or distributing the service."
  serviceOrganizations: JSON
  "List of input projection names supported by the service."
  supportedInputProjections: JSON
  "List of output projection names supported by the service."
  supportedOutputProjections: JSON
  "List of format name combinations which explicitly state which re-formatting options are available."
  supportedReformattings: JSON
  "The type of the service, software, or tool."
  type: String
  "Represents the Internet site where you can directly access the back-end service"
  url: JSON

  collections (
    "The unique concept id assigned to the service."
    conceptId: [String]
    "The number of services requested by the user"
    limit: Int
    "Zero based offset of individual results"
    offset: Int
  ): CollectionList
}

type ServiceList {
  "The number of hits for a given search."
  count: Int
  "Cursor that points to the a specific position in a list of requested records"
  cursor: String
  "The list of service search results."
  items: [Service]
}

type Query {
  services(
    "The unique concept id assigned to the service."
    conceptId: [String],
    "Cursor that points to the a specific position in a list of requested records"
    cursor: String
    "The number of servies requested by the user"
    limit: Int
    "Zero based offset of individual results"
    offset: Int
  ): ServiceList!
  service(
    "The unique concept id assigned to the service."
    conceptId: String!
  ): Service
}