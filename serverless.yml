service: graphql

provider:
  name: aws
  runtime: nodejs12.x
  region: us-east-1
  endpointType: PRIVATE
  environment:
    cmrRootUrl: ${env:CMR_ROOT_URL}

    # Timeout for lambda 
    lambdaTimeout: ${env:LAMBDA_TIMEOUT}

    # Pinned UMM versions
    ummCollectionVersion: '1.13'
    ummGranuleVersion: '1.5'
    ummServiceVersion: '1.2'
    ummVariableVersion: '1.5'

  vpc:
    securityGroupIds:
      - Fn::ImportValue: ${self:provider.stage}-LambdaSecurityGroup
    subnetIds:
      - ${env:SUBNET_ID_A}
      - ${env:SUBNET_ID_B}

  role:
    Fn::ImportValue: ${self:provider.stage}-GraphQLApplicationRole

# Package each lambda into individual zip files. This reduces the size of
# each lambda but increases the complexity of the compilation process slightly
package:
  individually: true

plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-plugin-log-subscription

functions:
  graphql:
    handler: src/graphql/handler.default
    timeout: ${env:LAMBDA_TIMEOUT}
    events:
    - http:
        path: api
        method: post
        cors: true
    - http:
        path: api
        method: get
        cors: true

custom:
  siteName: graphql-${self:provider.stage}

  # Default is 3000 so to avoid conflicts with other applications we'll define a new port
  serverless-offline:
    port: 3003

  # Serverless Webpack configurations
  webpack:
    includeModules: true
    packager: 'npm'
    excludeFiles: src/**/*.test.js

  # Forward logs to Splunk
  logSubscription:
    enabled: true
    destinationArn: ${env:LOG_DESTINATION_ARN}
