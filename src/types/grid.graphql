type Grid {
  "The unique concept id assigned to the grid."
  conceptId: String!
  "The urls related to this grid"
  relatedUrls: JSON
  "The organization that this grid belongs to"
  organization: JSON
  "The contact mechanisms for this grid"
  contactMechanisms: JSON
  "The additional attribute to the grid."
  additionalAttribute: JSON
  "The description for this grid"
  description: JSON
  "The grid defition for this grid"
  gridDefinition: JSON
  "The dimension size for this grid"
  dimensionSize: JSON
  "The resolution for this grid"
  resolution: JSON
  "The grid's spatial extent"
  spatialExtent: JSON
  "The records scale extent"
  scaleExtent: JSON
  "The version for this grid record"
  version: JSON
  "The metadata date for this record"
  metadataDate: JSON
  "The name for this grid"
  name: JSON
  "The metadata specification for this grid"
  metadataSpecification: JSON
  "The expanded or long name related to the grid name."
  longName: String
}

type GridList {
  "The number of hits for a given search."
  count: Int
  "Cursor that points to the a specific position in a list of requested records."
  cursor: String
  "The list of grid search results."
  items: [Grid]
}

input GridsInput {
  "The unique concept id assigned to the grid."
  conceptId: [String]
  "Cursor that points to the a specific position in a list of requested records."
  cursor: String
  "The number of variables requested by the user."
  limit: Int
}

input GridInput {
  "The unique concept id assigned to the grid."
  conceptId: String!
}

type Query {
  grids(
    "grids query parameters"
    params: GridsInput
  ): GridList!

  grid(
    params: GridInput
    "The unique concept id assigned to the grid."
    conceptId: String
    description: String
    name: String
    longName: String
  ): Grid
}
